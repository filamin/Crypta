{"version":3,"sources":["components/Coin/Coin.js","components/Stock/Stock.js","components/Converter/CurrencyRow.js","components/Converter/Converter.js","containers/FirstPage.js","containers/SecondPage.js","App.js","index.js"],"names":["Coin","name","image","symbol","price","marketcap","priceChange","volume","toFixed","className","src","alt","toLocaleString","Stock","id","useState","dateWithPrices","setDateWithPrices","useEffect","axios","get","then","res","data","prices","catch","error","alert","timeConverter","unixTime","date","Date","getDate","getMonth","getFullYear","forEach","item","push","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","dy","cursor","strokeWidth","type","activeDot","r","CurrencyRow","props","selected","amount","onChangeAmount","value","onChange","toUpperCase","Converter","toAmount","fromAmount","coins","from","loaded","to","fromCurrency","toCurrency","exchangeRate","find","x","current_price","setAmount","amountInFromCurrency","setAmountInFromCurrency","e","target","FirstPage","setCoins","setLoaded","search","setSearch","filteredCoins","filter","toLowerCase","includes","placeholder","map","coin","market_cap","price_change_percentage_24h","total_volume","SecondPage","btcPrice","setBtcPrice","ethPrice","setEthPrice","btcAmount","setBtcAmount","ethAmount","setEthAmount","show","setShow","usdAmount","console","log","onClick","required","min","readOnly","nameKey","cx","cy","innerRadius","outerRadius","fill","label","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d15d47a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Coin.css\";\r\n\r\nexport const Coin = ({\r\n  name,\r\n  image,\r\n  symbol,\r\n  price,\r\n  marketcap,\r\n  priceChange,\r\n  volume,\r\n}) => {\r\n  if (priceChange && price) {\r\n    priceChange = priceChange.toFixed(2);\r\n    price = price.toFixed(2);\r\n  }\r\n  return (\r\n    <div className=\"coin-container\">\r\n      <div className=\"coin-row\">\r\n        <div className=\"coin\">\r\n          <div className=\"coin-names\">\r\n            <img src={image} alt=\"crypta\" />\r\n            <h1>{name}</h1>\r\n            <p className=\"coin-symbol\">{symbol}</p>\r\n          </div>\r\n          <div className=\"coin-data\">\r\n            <p className=\"coin-price\">${price}</p>\r\n            <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n            {priceChange < 0 ? (\r\n              <p className=\"coin-precent red\">{priceChange}%</p>\r\n            ) : (\r\n              <p className=\"coin-precent green\">{priceChange}%</p>\r\n            )}\r\n            <p className=\"coin-marketcap\">\r\n              Рыночн. кап.: ${marketcap.toLocaleString()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nexport const Stock = ({ id }) => {\r\n  const [dateWithPrices, setDateWithPrices] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=14&interval=daily`\r\n      )\r\n      .then((res) => {\r\n        setDateWithPrices(res.data.prices);\r\n      })\r\n      .catch((error) => alert(`${error}`));\r\n  }, [setDateWithPrices]);\r\n\r\n  const timeConverter = (unixTime) => {\r\n    let date = new Date(unixTime - (unixTime % 1e3) / 1e3);\r\n    let normalTime =\r\n      date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n    return normalTime;\r\n  };\r\n\r\n  const data = [];\r\n  if (dateWithPrices) {\r\n    dateWithPrices.forEach((item) => {\r\n      data.push({\r\n        name: timeConverter(item[0]),\r\n        price: item[1].toFixed(2),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <LineChart\r\n        width={600}\r\n        height={500}\r\n        data={data}\r\n        margin={{\r\n          top: 50,\r\n          right: 50,\r\n          left: 0,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" stroke=\"white\" dy={10} />\r\n        <YAxis stroke=\"white\" />\r\n        <Tooltip cursor={{ stroke: \"red\", strokeWidth: 2 }} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"price\"\r\n          stroke=\"#ffffff\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CurrencyRow = (props) => {\r\n  const { selected, amount, onChangeAmount } = props;\r\n\r\n  return (\r\n    <div className=\"cur-row\">\r\n      <input\r\n        className=\"cur-input\"\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={onChangeAmount}\r\n      />\r\n      <p className=\"symbol\">{selected.toUpperCase()}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CurrencyRow } from \"./CurrencyRow\";\r\n\r\nimport \"./Converter.css\";\r\n\r\nexport const Converter = ({ coins, loaded, from, to }) => {\r\n  const fromCurrency = from;\r\n  const toCurrency = to;\r\n  const exchangeRate = coins.find((x) => x.symbol === from).current_price;\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n\r\n  let toAmount, fromAmount;\r\n\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  }\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"converter\">\r\n      <h1>Конвертер валют</h1>\r\n      <CurrencyRow\r\n        selected={fromCurrency}\r\n        amount={fromAmount}\r\n        onChangeAmount={handleFromAmountChange}\r\n      />\r\n      <p className=\"eq\">=</p>\r\n      <CurrencyRow\r\n        selected={toCurrency}\r\n        amount={toAmount}\r\n        onChangeAmount={handleToAmountChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport \"../App.css\";\r\nimport { Coin } from \"../components/Coin/Coin\";\r\nimport { Stock } from \"../components/Stock/Stock\";\r\nimport { Converter } from \"../components/Converter/Converter\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\n\r\nexport const FirstPage = () => {\r\n  const [coins, setCoins] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n      )\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n        setLoaded(true);\r\n      })\r\n      .catch((error) => alert(`${error}`));\r\n  }, []);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const filteredCoins = coins.filter((coins) =>\r\n    coins.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"coin-search\">\r\n        <div className=\"coin-menu\">\r\n          <h1 className=\"coin-text\">CRYPTA</h1>\r\n          <Link to=\"/secondpage\">\r\n            <FaArrowCircleRight />\r\n          </Link>\r\n        </div>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            className=\"coin-input\"\r\n            placeholder=\"Поиск...\"\r\n            onChange={handleChange}\r\n          ></input>\r\n        </form>\r\n      </div>\r\n\r\n      {loaded\r\n        ? filteredCoins.map((coin) => {\r\n            return (\r\n              <div className=\"coin-all\" key={coin.id}>\r\n                {coin.id === \"bitcoin\" ? (\r\n                  <div className=\"info-n-cur\">\r\n                    <Stock id={coin.id} />\r\n                    <Converter\r\n                      coins={coins}\r\n                      loaded={loaded}\r\n                      from={coin.symbol}\r\n                      to=\"usd\"\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n                {coin.id === \"ethereum\" ? (\r\n                  <div className=\"info-n-cur\">\r\n                    <Stock id={coin.id} />\r\n                    <Converter\r\n                      coins={coins}\r\n                      loaded={loaded}\r\n                      from={coin.symbol}\r\n                      to=\"usd\"\r\n                    />\r\n                  </div>\r\n                ) : null}\r\n                <Coin\r\n                  name={coin.name}\r\n                  image={coin.image}\r\n                  symbol={coin.symbol}\r\n                  marketcap={coin.market_cap}\r\n                  price={coin.current_price}\r\n                  priceChange={coin.price_change_percentage_24h}\r\n                  volume={coin.total_volume}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport \"../App.css\";\r\nimport \"./SecondPage.css\";\r\nimport { FaArrowCircleLeft } from \"react-icons/fa\";\r\nimport { PieChart, Pie } from \"recharts\";\r\n\r\nexport const SecondPage = () => {\r\n  const [btcPrice, setBtcPrice] = useState();\r\n  const [ethPrice, setEthPrice] = useState();\r\n  const [btcAmount, setBtcAmount] = useState(0);\r\n  const [ethAmount, setEthAmount] = useState(0);\r\n  const [show, setShow] = useState(true);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n      )\r\n      .then((res) => {\r\n        setBtcPrice(res.data[0].current_price);\r\n        setEthPrice(res.data[1].current_price);\r\n        setLoaded(true);\r\n      })\r\n      .catch((error) => alert(`${error}`));\r\n  }, []);\r\n  let usdAmount = 0;\r\n  let data = [];\r\n  if (loaded) {\r\n    usdAmount = (btcPrice * btcAmount + ethPrice * ethAmount).toFixed(2);\r\n    data[0] = { name: \"BTC\", value: btcPrice * btcAmount };\r\n    data[1] = { name: \"ETH\", value: ethPrice * ethAmount };\r\n    console.log(data);\r\n  }\r\n\r\n  function handleBtcAmountChange(e) {\r\n    setBtcAmount(e.target.value);\r\n  }\r\n  function handleEthAmountChange(e) {\r\n    setEthAmount(e.target.value);\r\n  }\r\n\r\n  function handleClickTransition() {\r\n    setShow(!show);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"coin-search\">\r\n        <div className=\"coin-menu\">\r\n          <h1 className=\"coin-text\">CRYPTA</h1>\r\n          <Link to=\"/firstpage\">\r\n            <FaArrowCircleLeft onClick={handleClickTransition} />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"my-cab-all\">\r\n        <div className=\"my-cab\">\r\n          <h1>Портфель валют</h1>\r\n          <div className=\"cur-row\">\r\n            <input\r\n              required\r\n              min={0}\r\n              className=\"cur-input\"\r\n              type=\"number\"\r\n              value={btcAmount}\r\n              onChange={handleBtcAmountChange}\r\n            />\r\n            <p className=\"symbol\">BTC</p>\r\n          </div>\r\n          <div className=\"cur-row\">\r\n            <input\r\n              min=\"0\"\r\n              className=\"cur-input\"\r\n              type=\"number\"\r\n              value={ethAmount}\r\n              onChange={handleEthAmountChange}\r\n            />\r\n            <p className=\"symbol\">ETH</p>\r\n          </div>\r\n          <div className=\"cur-row\">\r\n            <input\r\n              className=\"cur-input\"\r\n              type=\"number\"\r\n              value={usdAmount}\r\n              readOnly\r\n            />\r\n            <p className=\"symbol\">USD</p>\r\n          </div>\r\n        </div>\r\n        <PieChart width={800} height={900}>\r\n          <Pie\r\n            data={data}\r\n            dataKey=\"value\"\r\n            nameKey=\"name\"\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            innerRadius={200}\r\n            outerRadius={300}\r\n            fill=\"#49ba92\"\r\n            label\r\n          />\r\n        </PieChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { FirstPage } from \"./containers/FirstPage\";\nimport { SecondPage } from \"./containers/SecondPage\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"coin-app\">\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/firstpage\" />\n          <Route exact path=\"/firstpage\" component={FirstPage} />\n          <Route exact path=\"/secondpage\" component={SecondPage} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}